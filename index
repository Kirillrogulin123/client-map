
<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="utf-8"/>
<title>География клиентов</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
    html, body { height: 100%; margin: 0; padding: 0; font-family: Arial, sans-serif; background: #f4f4f4; }
    header {
        background-color: #2c3e50;
        color: white;
        padding: 10px 20px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
    }
    header .logo img {
        height: 60px;
        opacity: 0.7;
    }
    header .header-text {
        flex: 1;
        text-align: center;
    }
    h1 {
        margin: 0;
        font-size: 24px;
    }
    p {
        margin: 4px 0 0;
        font-size: 14px;
    }
    #search {
        padding: 5px;
        border-radius: 4px;
        border: none;
        outline: none;
        margin-left: auto;
    }
    #map { width: 100%; height: calc(100% - 90px); }
    .leaflet-control-layers-expanded { max-height: 250px; overflow-y: auto; }
</style>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
<script src="https://cdn.jsdelivr.net/npm/papaparse@5.3.2/papaparse.min.js"></script>
</head>

<body>
<header>
    <div class="logo">
        <img src="logo_header_transparent.png" alt="Логотип">
    </div>
    <div class="header-text">
        <h1>География клиентов компании</h1>
        <p>Интерактивная карта с фильтрами, кластерами и поиском по номеру клиента</p>
    </div>
    <input type="text" id="search" placeholder="Поиск по № клиента">
</header>
<div id="map"></div>

<script>
const map = L.map('map').setView([58, 60], 4);
const light = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; OpenStreetMap contributors'
}).addTo(map);
const dark = L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_dark/{z}/{x}/{y}{r}.png', {
    attribution: '&copy; Stadia Maps, OpenMapTiles, OpenStreetMap'
});
const baseMaps = {"Светлая тема": light, "Тёмная тема": dark};
const layerControl = L.control.layers(baseMaps, null, {collapsed: false}).addTo(map);

const markers = L.markerClusterGroup();
const markerList = [];

const searchInput = document.getElementById('search');
searchInput.addEventListener('input', function() {
    const value = this.value.trim();
    markerList.forEach(m => {
        if (!value || m.options.title.includes(value)) {
            markers.addLayer(m);
        } else {
            markers.removeLayer(m);
        }
    });
});

const sheetID = '102mcp0y13lbWtMdK7eZftYUWH9VtEz6icNQTfi-hIRQ';
const sheetURL = `https://docs.google.com/spreadsheets/d/${sheetID}/gviz/tq?tqx=out:csv`;

Papa.parse(sheetURL, {
    download: true,
    header: true,
    complete: function(results) {
        const data = results.data;
        data.forEach(row => {
            const lat = parseFloat(row["Широта"]);
            const lng = parseFloat(row["Долгота"]);
            const number = row["№"];
            const address = row["Юридический адрес"];
            const city = row["Город/Регион"];
            if (!isNaN(lat) && !isNaN(lng)) {
                const marker = L.marker([lat, lng], {title: number});
                marker.bindPopup(`<b>Клиент №${number}</b><br>${address}<br><i>${city}</i>`);
                markers.addLayer(marker);
                markerList.push(marker);
            }
        });
        map.addLayer(markers);
    }
});
</script>
</body>
</html>
